/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package defisheye;

import java.awt.Color;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JMenuItem;
import javax.swing.JRadioButton;
import javax.swing.JSlider;
import javax.swing.SwingConstants;

/**
 *
 * @author Dzmitry
 */
public class View extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public View() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonTypeGroup = new javax.swing.ButtonGroup();
        panelImages = new javax.swing.JPanel();
        imageLabel = new JLabel();
        panelTool = new javax.swing.JPanel();
        labelTransform = new javax.swing.JLabel();
        labelProcessing = new javax.swing.JLabel();
        labelRotate = new javax.swing.JLabel();
        sliderCorrection = new javax.swing.JSlider();
        checkBoxPreview = new javax.swing.JCheckBox();
        checkBoxAntialiased = new javax.swing.JCheckBox();
        radioButtonDiagonal = new javax.swing.JRadioButton();
        labelTypeImage = new javax.swing.JLabel();
        radioButtonCircular = new javax.swing.JRadioButton();
        labelCorrectionImage = new javax.swing.JLabel();
        sliderRotate = new javax.swing.JSlider();
        buttonAutoCorrection = new javax.swing.JButton();
        buttonApplyChanging = new javax.swing.JButton();
        labelTypeFX = new javax.swing.JLabel();
        labelTypeFY = new javax.swing.JLabel();
        spinnerFX = new javax.swing.JSpinner();
        spinnerFY = new javax.swing.JSpinner();
        labelTypeCX = new javax.swing.JLabel();
        spinnerCX = new javax.swing.JSpinner();
        labelTypeCY = new javax.swing.JLabel();
        spinnerCY = new javax.swing.JSpinner();
        labelTypeWidth = new javax.swing.JLabel();
        spinnerWidth = new javax.swing.JSpinner();
        labelTypeHeight = new javax.swing.JLabel();
        spinnerHeigth = new javax.swing.JSpinner();
        menuBar = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        menuItemOpen = new javax.swing.JMenuItem();
        menuItemClose = new javax.swing.JMenuItem();
        menuItemSave = new javax.swing.JMenuItem();
        menuItemSaveAs = new javax.swing.JMenuItem();
        menuItemExit = new javax.swing.JMenuItem();
        menuSettings = new javax.swing.JMenu();
        menuItemLoadSettings = new javax.swing.JMenuItem();
        menuItemSaveSettings = new javax.swing.JMenuItem();
        menuItemReset = new javax.swing.JMenuItem();
        menuHelp = new javax.swing.JMenu();
        menuItemHelp = new javax.swing.JMenuItem();
        menuItemAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Defisheye [developed by Strozh D.]");
        setBackground(new java.awt.Color(0, 204, 204));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        setForeground(java.awt.Color.black);
        setIconImages(null);
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(1024, 768));
        setName("mainFrame"); // NOI18N
        setPreferredSize(new java.awt.Dimension(1024, 768));

        panelImages.setBackground(new java.awt.Color(0, 0, 51));
        panelImages.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelImages.setOpaque(false);

        imageLabel.setBackground(new Color(0, 51, 102));
        imageLabel.setForeground(new Color(255, 255, 255));
        imageLabel.setHorizontalAlignment(SwingConstants.CENTER);
        imageLabel.setIcon(new ImageIcon(getClass().getResource("/defisheye/icon-image-500.png")));
        imageLabel.setHorizontalTextPosition(SwingConstants.CENTER);
        imageLabel.setOpaque(true);
        imageLabel.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                imageLabelAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        javax.swing.GroupLayout panelImagesLayout = new javax.swing.GroupLayout(panelImages);
        panelImages.setLayout(panelImagesLayout);
        panelImagesLayout.setHorizontalGroup(
            panelImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(imageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 911, Short.MAX_VALUE)
        );
        panelImagesLayout.setVerticalGroup(
            panelImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(imageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        panelTool.setBackground(new java.awt.Color(0, 204, 204));
        panelTool.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        labelTransform.setBackground(new java.awt.Color(0, 153, 153));
        labelTransform.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        labelTransform.setForeground(new java.awt.Color(255, 255, 255));
        labelTransform.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTransform.setText("Transformation");
        labelTransform.setToolTipText("");
        labelTransform.setOpaque(true);

        labelProcessing.setBackground(new java.awt.Color(0, 153, 153));
        labelProcessing.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        labelProcessing.setForeground(new java.awt.Color(255, 255, 255));
        labelProcessing.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelProcessing.setText("Processing");
        labelProcessing.setToolTipText("");
        labelProcessing.setOpaque(true);

        labelRotate.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        labelRotate.setForeground(new java.awt.Color(255, 255, 255));
        labelRotate.setText("Rotate:");

        sliderCorrection.setBackground(new java.awt.Color(0, 204, 204));
        sliderCorrection.setFont(new java.awt.Font("Century Gothic", 0, 8)); // NOI18N
        sliderCorrection.setForeground(new java.awt.Color(255, 255, 255));
        sliderCorrection.setMajorTickSpacing(1);
        sliderCorrection.setMinorTickSpacing(1);
        sliderCorrection.setPaintTicks(true);
        sliderCorrection.setSnapToTicks(true);
        sliderCorrection.setToolTipText("Rotate");
        sliderCorrection.setValue(0);
        sliderCorrection.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sliderCorrection.setVerifyInputWhenFocusTarget(false);

        checkBoxPreview.setBackground(new java.awt.Color(0, 204, 204));
        checkBoxPreview.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        checkBoxPreview.setForeground(new java.awt.Color(255, 255, 255));
        checkBoxPreview.setText("Preview");

        checkBoxAntialiased.setBackground(new java.awt.Color(0, 204, 204));
        checkBoxAntialiased.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        checkBoxAntialiased.setForeground(new java.awt.Color(255, 255, 255));
        checkBoxAntialiased.setText("Antialiased");
        checkBoxAntialiased.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxAntialiasedActionPerformed(evt);
            }
        });

        radioButtonDiagonal.setBackground(new java.awt.Color(0, 204, 204));
        buttonTypeGroup.add(radioButtonDiagonal);
        radioButtonDiagonal.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        radioButtonDiagonal.setForeground(new java.awt.Color(255, 255, 255));
        radioButtonDiagonal.setSelected(true);
        radioButtonDiagonal.setText("Diagonal fisheye");

        labelTypeImage.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        labelTypeImage.setForeground(new java.awt.Color(255, 255, 255));
        labelTypeImage.setText("Type of the image:");

        radioButtonCircular.setBackground(new java.awt.Color(0, 204, 204));
        buttonTypeGroup.add(radioButtonCircular);
        radioButtonCircular.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        radioButtonCircular.setForeground(new java.awt.Color(255, 255, 255));
        radioButtonCircular.setText("Circular fisheye");

        labelCorrectionImage.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        labelCorrectionImage.setForeground(new java.awt.Color(255, 255, 255));
        labelCorrectionImage.setText("Correction:");

        sliderRotate.setBackground(new java.awt.Color(0, 204, 204));
        sliderRotate.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        sliderRotate.setForeground(new java.awt.Color(255, 255, 255));
        sliderRotate.setMajorTickSpacing(1);
        sliderRotate.setMaximum(3);
        sliderRotate.setMinorTickSpacing(1);
        sliderRotate.setPaintTicks(true);
        sliderRotate.setSnapToTicks(true);
        sliderRotate.setToolTipText("Rotate");
        sliderRotate.setValue(0);
        sliderRotate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sliderRotate.setVerifyInputWhenFocusTarget(false);

        buttonAutoCorrection.setBackground(new java.awt.Color(0, 153, 153));
        buttonAutoCorrection.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        buttonAutoCorrection.setForeground(new java.awt.Color(255, 255, 255));
        buttonAutoCorrection.setText("Auto");
        buttonAutoCorrection.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonAutoCorrectionMouseClicked(evt);
            }
        });

        buttonApplyChanging.setBackground(new java.awt.Color(0, 0, 51));
        buttonApplyChanging.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        buttonApplyChanging.setForeground(new java.awt.Color(255, 255, 255));
        buttonApplyChanging.setText("Apply");
        buttonApplyChanging.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonApplyChangingMouseClicked(evt);
            }
        });

        labelTypeFX.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        labelTypeFX.setForeground(new java.awt.Color(255, 255, 255));
        labelTypeFX.setText("fx:");

        labelTypeFY.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        labelTypeFY.setForeground(new java.awt.Color(255, 255, 255));
        labelTypeFY.setText("fy:");

        spinnerFX.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        spinnerFX.setModel(new javax.swing.SpinnerNumberModel());
        spinnerFX.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        spinnerFY.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        spinnerFY.setModel(new javax.swing.SpinnerNumberModel());
        spinnerFY.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        labelTypeCX.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        labelTypeCX.setForeground(new java.awt.Color(255, 255, 255));
        labelTypeCX.setText("cx:");

        spinnerCX.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        spinnerCX.setModel(new javax.swing.SpinnerNumberModel());
        spinnerCX.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        labelTypeCY.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        labelTypeCY.setForeground(new java.awt.Color(255, 255, 255));
        labelTypeCY.setText("cy:");

        spinnerCY.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        spinnerCY.setModel(new javax.swing.SpinnerNumberModel());
        spinnerCY.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        labelTypeWidth.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        labelTypeWidth.setForeground(new java.awt.Color(255, 255, 255));
        labelTypeWidth.setText("width:");

        spinnerWidth.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        spinnerWidth.setModel(new javax.swing.SpinnerNumberModel());
        spinnerWidth.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        labelTypeHeight.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        labelTypeHeight.setForeground(new java.awt.Color(255, 255, 255));
        labelTypeHeight.setText("heigth:");

        spinnerHeigth.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        spinnerHeigth.setModel(new javax.swing.SpinnerNumberModel());
        spinnerHeigth.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout panelToolLayout = new javax.swing.GroupLayout(panelTool);
        panelTool.setLayout(panelToolLayout);
        panelToolLayout.setHorizontalGroup(
            panelToolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelToolLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelToolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonAutoCorrection, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelTransform, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelProcessing, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)
                    .addComponent(sliderCorrection, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelRotate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelTypeImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(checkBoxAntialiased, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(checkBoxPreview, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(radioButtonDiagonal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(radioButtonCircular, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelCorrectionImage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonApplyChanging, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sliderRotate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelToolLayout.createSequentialGroup()
                        .addGroup(panelToolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelToolLayout.createSequentialGroup()
                                .addGroup(panelToolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelTypeFX)
                                    .addComponent(labelTypeCX))
                                .addGap(18, 18, 18)
                                .addGroup(panelToolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(spinnerFX, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                                    .addComponent(spinnerCX)))
                            .addGroup(panelToolLayout.createSequentialGroup()
                                .addComponent(labelTypeWidth)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                                .addComponent(spinnerWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(29, 29, 29)
                        .addGroup(panelToolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelToolLayout.createSequentialGroup()
                                .addComponent(labelTypeHeight)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spinnerHeigth, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelToolLayout.createSequentialGroup()
                                .addComponent(labelTypeCY, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spinnerCY))
                            .addGroup(panelToolLayout.createSequentialGroup()
                                .addComponent(labelTypeFY, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spinnerFY)))))
                .addContainerGap())
        );
        panelToolLayout.setVerticalGroup(
            panelToolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelToolLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTransform, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelRotate, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sliderRotate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkBoxPreview)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkBoxAntialiased)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelProcessing, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelTypeImage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioButtonDiagonal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioButtonCircular)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelCorrectionImage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelToolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTypeFX)
                    .addComponent(spinnerFX)
                    .addComponent(spinnerFY)
                    .addComponent(labelTypeFY))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelToolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTypeCX)
                    .addComponent(spinnerCX)
                    .addComponent(spinnerCY)
                    .addComponent(labelTypeCY))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelToolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelToolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelTypeHeight)
                        .addComponent(spinnerHeigth)
                        .addComponent(spinnerWidth))
                    .addComponent(labelTypeWidth))
                .addGap(22, 22, 22)
                .addComponent(sliderCorrection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonAutoCorrection, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonApplyChanging, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        menuBar.setBackground(new java.awt.Color(0, 204, 204));
        menuBar.setForeground(new java.awt.Color(255, 255, 255));
        menuBar.setToolTipText("");
        menuBar.setAutoscrolls(true);
        menuBar.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        menuBar.setOpaque(false);

        menuFile.setBackground(new java.awt.Color(0, 204, 204));
        menuFile.setForeground(new java.awt.Color(255, 255, 255));
        menuFile.setText("File");
        menuFile.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        menuFile.setOpaque(true);

        menuItemOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        menuItemOpen.setBackground(new java.awt.Color(0, 204, 204));
        menuItemOpen.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        menuItemOpen.setForeground(new java.awt.Color(255, 255, 255));
        menuItemOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/defisheye/Open_24x24.png"))); // NOI18N
        menuItemOpen.setText("Open...");
        menuItemOpen.setOpaque(true);
        menuFile.add(menuItemOpen);

        menuItemClose.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        menuItemClose.setBackground(new java.awt.Color(0, 204, 204));
        menuItemClose.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        menuItemClose.setForeground(new java.awt.Color(255, 255, 255));
        menuItemClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/defisheye/Close_24x24.png"))); // NOI18N
        menuItemClose.setText("Close");
        menuItemClose.setEnabled(false);
        menuItemClose.setOpaque(true);
        menuFile.add(menuItemClose);

        menuItemSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        menuItemSave.setBackground(new java.awt.Color(0, 204, 204));
        menuItemSave.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        menuItemSave.setForeground(new java.awt.Color(255, 255, 255));
        menuItemSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/defisheye/Save_24x24.png"))); // NOI18N
        menuItemSave.setText("Save");
        menuItemSave.setEnabled(false);
        menuItemSave.setOpaque(true);
        menuFile.add(menuItemSave);

        menuItemSaveAs.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        menuItemSaveAs.setBackground(new java.awt.Color(0, 204, 204));
        menuItemSaveAs.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        menuItemSaveAs.setForeground(new java.awt.Color(255, 255, 255));
        menuItemSaveAs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/defisheye/Save_24x24.png"))); // NOI18N
        menuItemSaveAs.setText("Save as...");
        menuItemSaveAs.setEnabled(false);
        menuItemSaveAs.setOpaque(true);
        menuFile.add(menuItemSaveAs);

        menuItemExit.setBackground(new java.awt.Color(0, 204, 204));
        menuItemExit.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        menuItemExit.setForeground(new java.awt.Color(255, 255, 255));
        menuItemExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/defisheye/Exit_24x24.png"))); // NOI18N
        menuItemExit.setText("Exit");
        menuItemExit.setOpaque(true);
        menuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemExitActionPerformed(evt);
            }
        });
        menuFile.add(menuItemExit);

        menuBar.add(menuFile);

        menuSettings.setBackground(new java.awt.Color(0, 204, 204));
        menuSettings.setForeground(new java.awt.Color(255, 255, 255));
        menuSettings.setText("Settings");
        menuSettings.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        menuSettings.setOpaque(true);

        menuItemLoadSettings.setBackground(new java.awt.Color(0, 204, 204));
        menuItemLoadSettings.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        menuItemLoadSettings.setForeground(new java.awt.Color(255, 255, 255));
        menuItemLoadSettings.setIcon(new javax.swing.ImageIcon(getClass().getResource("/defisheye/Redo_24x24.png"))); // NOI18N
        menuItemLoadSettings.setText("Load");
        menuItemLoadSettings.setEnabled(false);
        menuItemLoadSettings.setOpaque(true);
        menuItemLoadSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemLoadSettingsActionPerformed(evt);
            }
        });
        menuSettings.add(menuItemLoadSettings);

        menuItemSaveSettings.setBackground(new java.awt.Color(0, 204, 204));
        menuItemSaveSettings.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        menuItemSaveSettings.setForeground(new java.awt.Color(255, 255, 255));
        menuItemSaveSettings.setIcon(new javax.swing.ImageIcon(getClass().getResource("/defisheye/Undo_24x24.png"))); // NOI18N
        menuItemSaveSettings.setText("Save");
        menuItemSaveSettings.setEnabled(false);
        menuItemSaveSettings.setOpaque(true);
        menuItemSaveSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemSaveSettingsActionPerformed(evt);
            }
        });
        menuSettings.add(menuItemSaveSettings);

        menuItemReset.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        menuItemReset.setBackground(new java.awt.Color(0, 204, 204));
        menuItemReset.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        menuItemReset.setForeground(new java.awt.Color(255, 255, 255));
        menuItemReset.setText("Reset");
        menuItemReset.setEnabled(false);
        menuItemReset.setOpaque(true);
        menuItemReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemResetActionPerformed(evt);
            }
        });
        menuSettings.add(menuItemReset);

        menuBar.add(menuSettings);

        menuHelp.setBackground(new java.awt.Color(0, 204, 204));
        menuHelp.setForeground(new java.awt.Color(255, 255, 255));
        menuHelp.setText("Help");
        menuHelp.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        menuHelp.setOpaque(true);

        menuItemHelp.setBackground(new java.awt.Color(0, 204, 204));
        menuItemHelp.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        menuItemHelp.setForeground(new java.awt.Color(255, 255, 255));
        menuItemHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/defisheye/Help_24x24.png"))); // NOI18N
        menuItemHelp.setText("Help");
        menuItemHelp.setOpaque(true);
        menuHelp.add(menuItemHelp);

        menuItemAbout.setBackground(new java.awt.Color(0, 204, 204));
        menuItemAbout.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        menuItemAbout.setForeground(new java.awt.Color(255, 255, 255));
        menuItemAbout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/defisheye/About_24x24.png"))); // NOI18N
        menuItemAbout.setText("About...");
        menuItemAbout.setOpaque(true);
        menuHelp.add(menuItemAbout);

        menuBar.add(menuHelp);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelTool, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelImages, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelTool, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelImages, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void initView() {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            setVisible(true);
        });
    }

    private void menuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemExitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuItemExitActionPerformed

    private void menuItemSaveSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemSaveSettingsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuItemSaveSettingsActionPerformed

    private void menuItemResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemResetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuItemResetActionPerformed

    private void checkBoxAntialiasedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxAntialiasedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkBoxAntialiasedActionPerformed

    private void buttonAutoCorrectionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonAutoCorrectionMouseClicked
        this.calibUI.setVisible(rootPaneCheckingEnabled);
    }//GEN-LAST:event_buttonAutoCorrectionMouseClicked

    private void buttonApplyChangingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonApplyChangingMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonApplyChangingMouseClicked

    private void imageLabelAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_imageLabelAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_imageLabelAncestorAdded

    private void menuItemLoadSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemLoadSettingsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuItemLoadSettingsActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonApplyChanging;
    private javax.swing.JButton buttonAutoCorrection;
    private javax.swing.ButtonGroup buttonTypeGroup;
    private javax.swing.JCheckBox checkBoxAntialiased;
    private javax.swing.JCheckBox checkBoxPreview;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JLabel labelCorrectionImage;
    private javax.swing.JLabel labelProcessing;
    private javax.swing.JLabel labelRotate;
    private javax.swing.JLabel labelTransform;
    private javax.swing.JLabel labelTypeCX;
    private javax.swing.JLabel labelTypeCY;
    private javax.swing.JLabel labelTypeFX;
    private javax.swing.JLabel labelTypeFY;
    private javax.swing.JLabel labelTypeHeight;
    private javax.swing.JLabel labelTypeImage;
    private javax.swing.JLabel labelTypeWidth;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenu menuHelp;
    private javax.swing.JMenuItem menuItemAbout;
    private javax.swing.JMenuItem menuItemClose;
    private javax.swing.JMenuItem menuItemExit;
    private javax.swing.JMenuItem menuItemHelp;
    private javax.swing.JMenuItem menuItemLoadSettings;
    private javax.swing.JMenuItem menuItemOpen;
    private javax.swing.JMenuItem menuItemReset;
    private javax.swing.JMenuItem menuItemSave;
    private javax.swing.JMenuItem menuItemSaveAs;
    private javax.swing.JMenuItem menuItemSaveSettings;
    private javax.swing.JMenu menuSettings;
    private javax.swing.JPanel panelImages;
    private javax.swing.JPanel panelTool;
    private javax.swing.JRadioButton radioButtonCircular;
    private javax.swing.JRadioButton radioButtonDiagonal;
    private javax.swing.JSlider sliderCorrection;
    private javax.swing.JSlider sliderRotate;
    private javax.swing.JSpinner spinnerCX;
    private javax.swing.JSpinner spinnerCY;
    private javax.swing.JSpinner spinnerFX;
    private javax.swing.JSpinner spinnerFY;
    private javax.swing.JSpinner spinnerHeigth;
    private javax.swing.JSpinner spinnerWidth;
    // End of variables declaration//GEN-END:variables
    private CalibView calibUI  = new CalibView(this, rootPaneCheckingEnabled);

    public CalibView getCalibUI() {
        return calibUI;
    }
    
    public JButton getButtonAutoCorrection() {
        return buttonAutoCorrection;
    }

    public ButtonGroup getButtonTypeGroup() {
        return buttonTypeGroup;
    }

    public JCheckBox getCheckBoxAntialiased() {
        return checkBoxAntialiased;
    }

    public JCheckBox getCheckBoxPreview() {
        return checkBoxPreview;
    }

    public JMenuItem getMenuItemAbout() {
        return menuItemAbout;
    }

    public JMenuItem getMenuItemClose() {
        return menuItemClose;
    }

    public JMenuItem getMenuItemExit() {
        return menuItemExit;
    }

    public JMenuItem getMenuItemHelp() {
        return menuItemHelp;
    }

    public JMenuItem getMenuItemOpen() {
        return menuItemOpen;
    }

    public JMenuItem getMenuItemLoadSettings() {
        return menuItemLoadSettings;
    }

    public JMenuItem getMenuItemReset() {
        return menuItemReset;
    }

    public JMenuItem getMenuItemSave() {
        return menuItemSave;
    }

    public JMenuItem getMenuItemSaveAs() {
        return menuItemSaveAs;
    }

    public JMenuItem getMenuItemSaveSettings() {
        return menuItemSaveSettings;
    }

    public JRadioButton getRadioButtonCircular() {
        return radioButtonCircular;
    }

    public JRadioButton getRadioButtonDiagonal() {
        return radioButtonDiagonal;
    }

    public JSlider getSliderCorrection() {
        return sliderCorrection;
    }

    public JSlider getSliderRotate() {
        return sliderRotate;
    }

    public javax.swing.JLabel getImageLabel() {
        return imageLabel;
    }

    public void setImageLabel(JLabel imageLabel) {
        this.imageLabel = imageLabel;
    }

    public void setDefaultImageLabel() {
        imageLabel.setIcon(new ImageIcon(getClass().getResource(Constants.DEFAULT_LABEL)));
    }

	public javax.swing.JButton getButtonApplyChanging() {
		return buttonApplyChanging;
	}

	public javax.swing.JSpinner getSpinnerCX() {
		return spinnerCX;
	}

	public javax.swing.JSpinner getSpinnerCY() {
		return spinnerCY;
	}

	public javax.swing.JSpinner getSpinnerFX() {
		return spinnerFX;
	}

	public javax.swing.JSpinner getSpinnerFY() {
		return spinnerFY;
	}

	public javax.swing.JSpinner getSpinnerHeigth() {
		return spinnerHeigth;
	}

	public javax.swing.JSpinner getSpinnerWidth() {
		return spinnerWidth;
	}
}
